{"version":3,"sources":["../../../../gl/vincenttunru/tripledoc/dist/index.es.js","../../../../gl/vincenttunru/tripledoc/node_modules/n3/lib sync /^/.//N3.*$","../../../../gl/vincenttunru/tripledoc/node_modules/@trust/webcrypto/src/algorithms sync","components/IncomingList.tsx","services/getFriendList.ts","components/FriendSelector.tsx","components/Person.tsx","components/Friendlist.tsx","components/FriendLists.tsx","services/getFriendListForWebId.ts","components/Profile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","store","fetcher","undefined","updater","getStore","flushStore","getFetcher","getUpdater","update","statementsToDelete","statementsToAdd","_uri","success","errorBody","Error","findSubjectInStore","predicateRef","objectRef","documentNode","type","subjectRef","targetSubject","targetPredicate","targetObject","targetDocument","statement","statementsMatching","normaliseEntity","findEntityInStore","findSubjectsInStore","findEntitiesInStore","findObjectsInStore","map","filter","isEntity","entity","uri","isLiteral","node","fromDateTimeLiteral","literal","utcFullYear","parseInt","substring","utcMonth","utcDate","utcHours","utcMinutes","utcSeconds","indexOf","date","Date","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","fromIntegerLiteral","fromDecimalLiteral","parseFloat","fromStringLiteral","fromLiteral","isDateTimeLiteral","isIntegerLiteral","isDecimalLiteral","asLiteral","fromDate","fromNumber","createDocument","ref","instantiateDocument","existsOnPod","fetchDocument","documentRef","response","aclRef","_a","load","extractAclRef","linkHeader","headers","get","aclLinks","parse","URL","href","metadata","_this","docUrl","origin","pathname","search","getAclRef","accessedSubjects","getSubject","document","pendingAdditions","pendingDeletions","predicateNode","asNodeRef","getNodeRef","firstNodeRef","find","isNodeRef","addLiteral","addNodeRef","nodeRef","removeAll","getDocument","getStatements","getString","firstStringLiteral","isStringLiteral","getInteger","firstIntegerLiteral","getDecimal","firstDecimalLiteral","getDateTime","firstDateTimeLiteral","getLiteral","firstLiteral","getAllStrings","getAllIntegers","getAllDecimals","getAllDateTimes","getAllLiterals","getAllNodeRefs","getType","removeLiteral","removeNodeRef","setLiteral","setNodeRef","getPendingStatements","onSave","initialiseSubject","tripleDocument","findSubjects","withDocumentPlural","findSubjectRefs","addSubject","_b","_c","identifier","generateIdentifier","_d","identifierPrefix","getSubjectsOfType","typeRef","findSubject","withDocumentSingular","findSubjectRef","getAcl","save","subjects","Object","values","relevantSubjects","allDeletions","allAdditions","subject","reduce","deletionsSoFar","additionsSoFar","deletions","additions","concat","url","doc","sym","put","ok","errorMessage","forEach","getEntityFromStore","knownEntity1","knownEntity2","getEntitiesFromStore","now","toString","Math","random","param","termType","datatype","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","code","keys","module","exports","webpackEmptyContext","FriendRequestData","webId","name","picture","schema","BefriendAction","console","warn","subjectToUse","agent","profileDoc","sub","vcard","fn","hasPhoto","error","getInboxUrl","a","profile","inboxUrl","ldp","inbox","getContainerItems","containerUrl","containerDoc","containerNode","contains","getFriendRequestsFromInbox","inboxItems","all","obj","fetchAndParse","fetchProfile","removeRemoteDoc","SolidAuth","fetch","method","removeFriendRequest","addFriend","currentSession","fetchDocumentForClass","Individual","addressBookDocument","groups","Group","friendsGroup","group","hasMember","IncomingList","useWebId","React","useState","friendRequests","setFriendRequests","friendRequestsToAccept","setFriendRequestsToAccept","friendRequestsToReject","setFriendRequestsToReject","updateList","friendRequestObjs","filtered","useEffect","item","accept","index","key","className","src","onClick","arr","firstGroup","rdf","friendsAclRef","friendsAclDoc","ownerAcl","acl","Authorization","accessTo","mode","Read","Append","Write","Control","friendsAcl","agentGroup","FriendSelector","props","setWebId","onSubmit","event","preventDefault","onSelect","onChange","target","Person","friendSubject","setFriendSubject","friendDoc","Profile","photo","alt","to","encodeURIComponent","title","foaf","recipient","Friendlist","addedFriends","setAddedFriends","storedFriends","setStoredFriends","friendsToAdd","friend","includes","friendlist","sendFriendRequest","log","friends","friendElements","useMemo","getPersonCard","FriendLists","friendLists","setFriendlists","getFriendLists","friendListElements","i","publicTypeIndexRef","solid","publicTypeIndex","individualIndex","forClass","friendListsDocRef","instance","friendListsDoc","addressBooks","list","contacts","params","useParams","decodeURIComponent","metaFriends","setMetaFriends","getFriendListsForWebId","theirFriends","friendRef","add","Set","Array","from","profiles","App","LoggedOut","LoginButton","popup","LoggedIn","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f002a99.chunk.js","sourcesContent":["import LinkHeader from 'http-link-header';\nimport { rdf } from 'rdf-namespaces';\nimport { graph, Fetcher, UpdateManager, sym, st, Literal } from 'rdflib';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nvar store = graph();\nvar fetcher = new Fetcher(store, undefined);\nvar updater = new UpdateManager(store);\n/**\r\n * Single instance of an rdflib store, caches all fetched data\r\n *\r\n * @ignore Can be used as an escape hatch for people who want to use rdflib directly, but if that\r\n *         is necessary, please consider submitting a feature request describing your use case\r\n *         on Tripledoc first.\r\n */\n\nfunction getStore() {\n  return store;\n}\n\nfunction flushStore() {\n  store = graph();\n}\n/**\r\n * Single instance of an rdflib fetcher\r\n *\r\n * @ignore Can be used as an escape hatch for people who want to use rdflib directly, but if that\r\n *         is necessary, please consider submitting a feature request describing your use case\r\n *         on Tripledoc first.\r\n */\n\n\nfunction getFetcher() {\n  return fetcher;\n}\n/**\r\n * Single instance of an rdflib updater\r\n *\r\n * @ignore Can be used as an escape hatch for people who want to use rdflib directly, but if that\r\n *         is necessary, please consider submitting a feature request describing your use case\r\n *         on Tripledoc first.\r\n */\n\n\nfunction getUpdater() {\n  return updater;\n}\n/**\r\n * Utility function that properly promisifies the RDFLib UpdateManager's update function\r\n *\r\n * @param statementsToDelete Statements currently present on the Pod that should be deleted.\r\n * @param statementsToAdd Statements not currently present on the Pod that should be added.\r\n * @returns Promise that resolves when the update was executed successfully, and rejects if not.\r\n * @ignore Should not be used by library consumers directly.\r\n */\n\n/* istanbul ignore next Just a thin wrapper around rdflib, yet cumbersome to test due to side effects */\n\n\nfunction update(statementsToDelete, statementsToAdd) {\n  var promise = new Promise(function (resolve, reject) {\n    var updater = getUpdater();\n    updater.update(statementsToDelete, statementsToAdd, function (_uri, success, errorBody) {\n      if (success) {\n        return resolve();\n      }\n\n      return reject(new Error(errorBody));\n    });\n  });\n  return promise;\n}\n/**\r\n * Utility function that properly promisifies the RDFLib UpdateManager's `put` function\r\n *\r\n * @param url URL of the Document that should be created.\r\n * @param statementsToAdd Statements that should be added to the Document.\r\n * @returns Promise that resolves with the response when the Document was created successfully, and rejects if not.\r\n * @ignore Should not be used by library consumers directly.\r\n */\n\n/* istanbul ignore next Just a thin wrapper around rdflib, yet cumbersome to test due to side effects */\n\n\nfunction create(url, statementsToAdd) {\n  var promise = new Promise(function (resolve, reject) {\n    var store = getStore();\n    var updater = getUpdater();\n    var doc = store.sym(url);\n    updater.put(doc, statementsToAdd, 'text/turtle', function (_uri, ok, errorMessage, response) {\n      if (!ok) {\n        return reject(new Error(errorMessage));\n      }\n\n      return resolve(response);\n    });\n  });\n  return promise;\n}\n/**\r\n * @ignore This is a utility method for other parts of the code, and not part of the public API.\r\n */\n\n\nvar findSubjectInStore = function findSubjectInStore(store, predicateRef, objectRef, documentNode) {\n  return findEntityInStore(store, 'subject', null, predicateRef, objectRef, documentNode);\n};\n/**\r\n * @ignore This is a utility method for other parts of the code, and not part of the public API.\r\n */\n\n\nvar findSubjectsInStore = function findSubjectsInStore(store, predicateRef, objectRef, documentNode) {\n  return findEntitiesInStore(store, 'subject', null, predicateRef, objectRef, documentNode);\n};\n/**\r\n * @ignore This is a utility method for other parts of the code, and not part of the public API.\r\n */\n\n\nvar findObjectsInStore = function findObjectsInStore(store, subjectRef, predicateRef, documentNode) {\n  return findEntitiesInStore(store, 'object', subjectRef, predicateRef, null, documentNode);\n};\n/**\r\n * @ignore This is a utility method for other parts of the code, and not part of the public API.\r\n */\n\n\nfunction findEntityInStore(store, type, subjectRef, predicateRef, objectRef, documentNode) {\n  var targetSubject = subjectRef ? sym(subjectRef) : null;\n  var targetPredicate = predicateRef ? sym(predicateRef) : null;\n  var targetObject = objectRef ? sym(objectRef) : null;\n  var targetDocument = sym(documentNode);\n  var statement = store.statementsMatching(targetSubject, targetPredicate, targetObject, targetDocument, true)[0];\n\n  if (!statement || !statement[type]) {\n    return null;\n  }\n\n  return normaliseEntity(statement[type]);\n}\n/**\r\n * @ignore This is a utility method for other parts of the code, and not part of the public API.\r\n */\n\n\nfunction findEntitiesInStore(store, type, subjectRef, predicateRef, objectRef, documentNode) {\n  var targetSubject = subjectRef ? sym(subjectRef) : null;\n  var targetPredicate = predicateRef ? sym(predicateRef) : null;\n  var targetObject = objectRef ? sym(objectRef) : null;\n  var targetDocument = sym(documentNode);\n  var statements = store.statementsMatching(targetSubject, targetPredicate, targetObject, targetDocument, false);\n  return statements.map(function (statement) {\n    return normaliseEntity(statement[type]);\n  }).filter(isEntity);\n}\n\nfunction normaliseEntity(entity) {\n  if (isNamedNode(entity)) {\n    return entity.uri;\n  }\n  /* istanbul ignore else: All code paths to here result in either a Node or a Literal, so we can't test it */\n\n\n  if (isLiteral(entity)) {\n    return entity;\n  }\n  /* istanbul ignore next: All code paths to here result in either a Node or a Literal, so we can't test it */\n\n\n  return null;\n}\n\nfunction isEntity(node) {\n  return node !== null;\n}\n/**\r\n * @ignore Utility function for working with rdflib, which the library consumer should not need to\r\n *         be exposed to.\r\n */\n\n\nfunction isNamedNode(node) {\n  return typeof node.uri === 'string';\n}\n/**\r\n * @ignore Only to be called by the Document containing this subject; not a public API.\r\n * @param document The Document this Subject is defined in.\r\n * @param subjectRef The URL that identifies this subject.\r\n */\n\n\nfunction initialiseSubject(document, subjectRef) {\n  var store = getStore();\n  var pendingAdditions = [];\n  var pendingDeletions = [];\n\n  var get = function get(predicateNode) {\n    return findObjectsInStore(store, subjectRef, predicateNode, document.asNodeRef());\n  };\n\n  var getString = function getString(predicateNode) {\n    var objects = get(predicateNode);\n    var firstStringLiteral = objects.find(isStringLiteral);\n\n    if (typeof firstStringLiteral === 'undefined') {\n      return null;\n    }\n\n    return firstStringLiteral.value;\n  };\n\n  var getInteger = function getInteger(predicateNode) {\n    var objects = get(predicateNode);\n    var firstIntegerLiteral = objects.find(isIntegerLiteral);\n\n    if (typeof firstIntegerLiteral === 'undefined') {\n      return null;\n    }\n\n    return fromIntegerLiteral(firstIntegerLiteral);\n  };\n\n  var getDecimal = function getDecimal(predicateNode) {\n    var objects = get(predicateNode);\n    var firstDecimalLiteral = objects.find(isDecimalLiteral);\n\n    if (typeof firstDecimalLiteral === 'undefined') {\n      return null;\n    }\n\n    return fromDecimalLiteral(firstDecimalLiteral);\n  };\n\n  var getDateTime = function getDateTime(predicateNode) {\n    var objects = get(predicateNode);\n    var firstDateTimeLiteral = objects.find(isDateTimeLiteral);\n\n    if (typeof firstDateTimeLiteral === 'undefined') {\n      return null;\n    }\n\n    return fromDateTimeLiteral(firstDateTimeLiteral);\n  };\n\n  var getLiteral = function getLiteral(predicateNode) {\n    var objects = get(predicateNode);\n    var firstLiteral = objects.find(isLiteral);\n\n    if (typeof firstLiteral === 'undefined') {\n      return null;\n    }\n\n    return fromLiteral(firstLiteral);\n  };\n\n  var getAllStrings = function getAllStrings(predicateNode) {\n    var objects = get(predicateNode);\n    var literals = objects.filter(isStringLiteral);\n    return literals.map(fromStringLiteral);\n  };\n\n  var getAllIntegers = function getAllIntegers(predicateNode) {\n    var objects = get(predicateNode);\n    var literals = objects.filter(isIntegerLiteral);\n    return literals.map(fromIntegerLiteral);\n  };\n\n  var getAllDecimals = function getAllDecimals(predicateNode) {\n    var objects = get(predicateNode);\n    var literals = objects.filter(isDecimalLiteral);\n    return literals.map(fromDecimalLiteral);\n  };\n\n  var getAllDateTimes = function getAllDateTimes(predicateNode) {\n    var objects = get(predicateNode);\n    var literals = objects.filter(isDateTimeLiteral);\n    return literals.map(fromDateTimeLiteral);\n  };\n\n  var getAllLiterals = function getAllLiterals(predicateNode) {\n    var objects = get(predicateNode);\n    var literals = objects.filter(isLiteral);\n    return literals.map(fromLiteral);\n  };\n\n  var getNodeRef = function getNodeRef(predicateNode) {\n    var objects = get(predicateNode);\n    var firstNodeRef = objects.find(isNodeRef);\n\n    if (typeof firstNodeRef === 'undefined') {\n      return null;\n    }\n\n    return firstNodeRef;\n  };\n\n  var getAllNodeRefs = function getAllNodeRefs(predicateNode) {\n    var objects = get(predicateNode);\n    var nodeRefs = objects.filter(isNodeRef);\n    return nodeRefs;\n  };\n\n  var getType = function getType() {\n    return getNodeRef(rdf.type);\n  };\n\n  var addLiteral = function addLiteral(predicateRef, literal) {\n    pendingAdditions.push(st(sym(subjectRef), sym(predicateRef), asLiteral(literal), sym(document.asNodeRef())));\n  };\n\n  var addNodeRef = function addNodeRef(predicateRef, nodeRef) {\n    pendingAdditions.push(st(sym(subjectRef), sym(predicateRef), sym(nodeRef), sym(document.asNodeRef())));\n  };\n\n  var removeAll = function removeAll(predicateRef) {\n    pendingDeletions.push.apply(pendingDeletions, store.statementsMatching(sym(subjectRef), sym(predicateRef), null, sym(document.asNodeRef())));\n  };\n\n  var subject = {\n    getDocument: function getDocument() {\n      return document;\n    },\n    getStatements: function getStatements() {\n      return store.statementsMatching(sym(subjectRef), null, null, sym(document.asNodeRef()));\n    },\n    getString: getString,\n    getInteger: getInteger,\n    getDecimal: getDecimal,\n    getDateTime: getDateTime,\n    getLiteral: getLiteral,\n    getAllStrings: getAllStrings,\n    getAllIntegers: getAllIntegers,\n    getAllDecimals: getAllDecimals,\n    getAllDateTimes: getAllDateTimes,\n    getAllLiterals: getAllLiterals,\n    getNodeRef: getNodeRef,\n    getAllNodeRefs: getAllNodeRefs,\n    getType: getType,\n    addLiteral: addLiteral,\n    addNodeRef: addNodeRef,\n    removeAll: removeAll,\n    removeLiteral: function removeLiteral(predicateRef, literal) {\n      pendingDeletions.push(st(sym(subjectRef), sym(predicateRef), asLiteral(literal), sym(document.asNodeRef())));\n    },\n    removeNodeRef: function removeNodeRef(predicateRef, nodeRef) {\n      pendingDeletions.push(st(sym(subjectRef), sym(predicateRef), sym(nodeRef), sym(document.asNodeRef())));\n    },\n    setLiteral: function setLiteral(predicateRef, literal) {\n      removeAll(predicateRef);\n      addLiteral(predicateRef, literal);\n    },\n    setNodeRef: function setNodeRef(predicateRef, nodeRef) {\n      removeAll(predicateRef);\n      addNodeRef(predicateRef, nodeRef);\n    },\n    getPendingStatements: function getPendingStatements() {\n      return [pendingDeletions, pendingAdditions];\n    },\n    onSave: function onSave() {\n      pendingDeletions = [];\n      pendingAdditions = [];\n    },\n    asNodeRef: function asNodeRef() {\n      return subjectRef;\n    }\n  };\n  return subject;\n}\n\nfunction fromDateTimeLiteral(literal) {\n  // See https://github.com/linkeddata/rdflib.js/blob/d84af88f367b8b5f617c753d8241c5a2035458e8/src/literal.js#L87\n  var utcFullYear = parseInt(literal.value.substring(0, 4), 10);\n  var utcMonth = parseInt(literal.value.substring(5, 7), 10) - 1;\n  var utcDate = parseInt(literal.value.substring(8, 10), 10);\n  var utcHours = parseInt(literal.value.substring(11, 13), 10);\n  var utcMinutes = parseInt(literal.value.substring(14, 16), 10);\n  var utcSeconds = parseInt(literal.value.substring(17, literal.value.indexOf('Z')), 10);\n  var date = new Date(0);\n  date.setUTCFullYear(utcFullYear);\n  date.setUTCMonth(utcMonth);\n  date.setUTCDate(utcDate);\n  date.setUTCHours(utcHours);\n  date.setUTCMinutes(utcMinutes);\n  date.setUTCSeconds(utcSeconds);\n  return date;\n}\n\nfunction fromIntegerLiteral(literal) {\n  return parseInt(literal.value, 10);\n}\n\nfunction fromDecimalLiteral(literal) {\n  return parseFloat(literal.value);\n}\n\nfunction fromStringLiteral(literal) {\n  return literal.value;\n}\n\nfunction fromLiteral(literal) {\n  if (isDateTimeLiteral(literal)) {\n    return fromDateTimeLiteral(literal);\n  }\n\n  if (isIntegerLiteral(literal)) {\n    return fromIntegerLiteral(literal);\n  }\n\n  if (isDecimalLiteral(literal)) {\n    return fromDecimalLiteral(literal);\n  }\n\n  return literal.value;\n}\n\nfunction asLiteral(literal) {\n  if (literal instanceof Date) {\n    return Literal.fromDate(literal);\n  }\n\n  if (typeof literal === 'number') {\n    return Literal.fromNumber(literal);\n  }\n\n  return new Literal(literal, undefined, undefined);\n}\n/**\r\n * Initialise a new Turtle document\r\n *\r\n * Note that this Document will not be created on the Pod until you call [[save]] on it.\r\n *\r\n * @param ref URL where this document should live\r\n * @param statements Initial statements to be included in this document\r\n */\n\n\nfunction createDocument(ref) {\n  return instantiateDocument(ref, {\n    existsOnPod: false\n  });\n}\n/**\r\n * Retrieve a document containing RDF triples\r\n *\r\n * Note that if you fetch the same document twice, it will be cached; only one\r\n * network request will be performed.\r\n *\r\n * @param documentRef Where the document lives.\r\n * @returns Representation of triples in the document at `uri`.\r\n */\n\n\nfunction fetchDocument(documentRef) {\n  return __awaiter(this, void 0, void 0, function () {\n    var fetcher, response, aclRef;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          fetcher = getFetcher();\n          return [4\n          /*yield*/\n          , fetcher.load(documentRef)];\n\n        case 1:\n          response = _a.sent();\n          aclRef = extractAclRef(response, documentRef);\n          return [2\n          /*return*/\n          , instantiateDocument(documentRef, {\n            aclRef: aclRef,\n            existsOnPod: true\n          })];\n      }\n    });\n  });\n}\n\nfunction extractAclRef(response, documentRef) {\n  var aclRef;\n  var linkHeader = response.headers.get('Link');\n\n  if (linkHeader) {\n    var parsedLinks = LinkHeader.parse(linkHeader);\n    var aclLinks = parsedLinks.get('rel', 'acl');\n\n    if (aclLinks.length === 1) {\n      aclRef = new URL(aclLinks[0].uri, documentRef).href;\n    }\n  }\n\n  return aclRef;\n}\n\nfunction instantiateDocument(uri, metadata) {\n  var _this = this;\n\n  var docUrl = new URL(uri); // Remove fragment identifiers (e.g. `#me`) from the URI:\n\n  var documentRef = docUrl.origin + docUrl.pathname + docUrl.search;\n\n  var getAclRef = function getAclRef() {\n    return metadata.aclRef || null;\n  };\n\n  var accessedSubjects = {};\n\n  var getSubject = function getSubject(subjectRef) {\n    if (!accessedSubjects[subjectRef]) {\n      accessedSubjects[subjectRef] = initialiseSubject(tripleDocument, subjectRef);\n    }\n\n    return accessedSubjects[subjectRef];\n  };\n\n  var findSubject = function findSubject(predicateRef, objectRef) {\n    var findSubjectRef = withDocumentSingular(findSubjectInStore, documentRef);\n    var subjectRef = findSubjectRef(predicateRef, objectRef);\n\n    if (!subjectRef || isLiteral(subjectRef)) {\n      return null;\n    }\n\n    return getSubject(subjectRef);\n  };\n\n  var findSubjects = function findSubjects(predicateRef, objectRef) {\n    var findSubjectRefs = withDocumentPlural(findSubjectsInStore, documentRef);\n    var subjectRefs = findSubjectRefs(predicateRef, objectRef);\n    return subjectRefs.filter(isNodeRef).map(getSubject);\n  };\n\n  var getSubjectsOfType = function getSubjectsOfType(typeRef) {\n    return findSubjects(rdf.type, typeRef);\n  };\n\n  var addSubject = function addSubject(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.identifier,\n        identifier = _c === void 0 ? generateIdentifier() : _c,\n        _d = _b.identifierPrefix,\n        identifierPrefix = _d === void 0 ? '' : _d;\n\n    var subjectRef = documentRef + '#' + identifierPrefix + identifier;\n    return getSubject(subjectRef);\n  };\n\n  var save = function save(subjects) {\n    if (subjects === void 0) {\n      subjects = Object.values(accessedSubjects);\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      var relevantSubjects, _a, allDeletions, allAdditions, response, aclRef;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            relevantSubjects = subjects.filter(function (subject) {\n              return subject.getDocument().asNodeRef() === documentRef;\n            });\n            _a = relevantSubjects.reduce(function (_a, subject) {\n              var deletionsSoFar = _a[0],\n                  additionsSoFar = _a[1];\n\n              var _b = subject.getPendingStatements(),\n                  deletions = _b[0],\n                  additions = _b[1];\n\n              return [deletionsSoFar.concat(deletions), additionsSoFar.concat(additions)];\n            }, [[], []]), allDeletions = _a[0], allAdditions = _a[1];\n            if (!!metadata.existsOnPod) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , create(documentRef, allAdditions)];\n\n          case 1:\n            response = _b.sent();\n            aclRef = extractAclRef(response, documentRef);\n\n            if (aclRef) {\n              metadata.aclRef = aclRef;\n            }\n\n            metadata.existsOnPod = true;\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , update(allDeletions, allAdditions)];\n\n          case 3:\n            _b.sent();\n\n            _b.label = 4;\n\n          case 4:\n            relevantSubjects.forEach(function (subject) {\n              return subject.onSave();\n            });\n            return [2\n            /*return*/\n            , relevantSubjects];\n        }\n      });\n    });\n  };\n\n  var tripleDocument = {\n    addSubject: addSubject,\n    getSubject: getSubject,\n    getSubjectsOfType: getSubjectsOfType,\n    findSubject: findSubject,\n    findSubjects: findSubjects,\n    getAcl: getAclRef,\n    getAclRef: getAclRef,\n    asNodeRef: function asNodeRef() {\n      return documentRef;\n    },\n    save: save\n  };\n  return tripleDocument;\n}\n\nvar withDocumentSingular = function withDocumentSingular(getEntityFromStore, document) {\n  var store = getStore();\n  return function (knownEntity1, knownEntity2) {\n    return getEntityFromStore(store, knownEntity1, knownEntity2, document);\n  };\n};\n\nvar withDocumentPlural = function withDocumentPlural(getEntitiesFromStore, document) {\n  var store = getStore();\n  return function (knownEntity1, knownEntity2) {\n    return getEntitiesFromStore(store, knownEntity1, knownEntity2, document);\n  };\n};\n/**\r\n * Generate a string that can be used as the unique identifier for a Subject\r\n *\r\n * This function works by starting with a date string (so that Subjects can be\r\n * sorted chronologically), followed by a random number generated by taking a\r\n * random number between 0 and 1, and cutting off the `0.`.\r\n *\r\n * @ignore\r\n * @returns An string that's likely to be unique\r\n */\n\n\nvar generateIdentifier = function generateIdentifier() {\n  return Date.now().toString() + Math.random().toString().substring('0.'.length);\n};\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a Literal, so\r\n *         this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be an RDFlib Literal.\r\n * @returns Whether `param` is an RDFlib Literal.\r\n */\n\n\nfunction isLiteral(param) {\n  return typeof param === 'object' && param !== null && typeof param.termType === 'string' && param.termType === 'Literal';\n}\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a specific\r\n *         type, so this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be an RDFlib string Literal.\r\n * @returns Whether `param` is an RDFlib string Literal.\r\n */\n\n\nfunction isStringLiteral(param) {\n  return isLiteral(param) && param.datatype.uri === 'http://www.w3.org/2001/XMLSchema#string';\n}\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a specific\r\n *         type, so this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be an RDFlib integer Literal.\r\n * @returns Whether `param` is an RDFlib integer Literal.\r\n */\n\n\nfunction isIntegerLiteral(param) {\n  return isLiteral(param) && param.datatype.uri === 'http://www.w3.org/2001/XMLSchema#integer';\n}\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a specific\r\n *         type, so this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be an RDFlib decimal Literal.\r\n * @returns Whether `param` is an RDFlib decimal Literal.\r\n */\n\n\nfunction isDecimalLiteral(param) {\n  return isLiteral(param) && param.datatype.uri === 'http://www.w3.org/2001/XMLSchema#decimal';\n}\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a specific\r\n *         type, so this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be an RDFlib DateTime Literal.\r\n * @returns Whether `param` is an RDFlib DateTime Literal.\r\n */\n\n\nfunction isDateTimeLiteral(param) {\n  return isLiteral(param) && param.datatype.uri === 'http://www.w3.org/2001/XMLSchema#dateTime';\n}\n/**\r\n * @ignore Tripledoc's methods should be explicit about whether they return or accept a [[NodeRef]],\r\n *         so this is merely an internal utility function, rather than a public API.\r\n * @param param A value that might or might not be a reference to a node in the Linked Data graph.\r\n * @returns Whether `param` is a reference to a node in the Linked Data graph.\r\n */\n\n\nfunction isNodeRef(node) {\n  return typeof node === 'string' && !isLiteral(node);\n}\n\nexport { create, createDocument, fetchDocument, flushStore, getFetcher, getStore, getUpdater, initialiseSubject, isDateTimeLiteral, isDecimalLiteral, isIntegerLiteral, isLiteral, isNodeRef, isStringLiteral, update };","var map = {\n\t\"./N3Lexer\": 105,\n\t\"./N3Lexer.js\": 105,\n\t\"./N3Parser\": 106,\n\t\"./N3Parser.js\": 106,\n\t\"./N3Store\": 151,\n\t\"./N3Store.js\": 151,\n\t\"./N3StreamParser\": 152,\n\t\"./N3StreamParser.js\": 152,\n\t\"./N3StreamWriter\": 158,\n\t\"./N3StreamWriter.js\": 158,\n\t\"./N3Util\": 107,\n\t\"./N3Util.js\": 107,\n\t\"./N3Writer\": 111,\n\t\"./N3Writer.js\": 111\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 258;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 452;","import React from 'react';\nimport { useWebId } from '@solid/react';\nimport { fetchDocument, TripleSubject, flushStore } from 'tripledoc';\nimport { ldp, schema, vcard } from 'rdf-namespaces';\nimport SolidAuth from 'solid-auth-client';\nimport { fetchDocumentForClass } from 'tripledoc-solid-helpers';\n\nclass FriendRequestData {\n  url: string\n  webId?: string\n  name?: string | null\n  picture?: string | null\n  constructor(url: string) {\n    this.url = url;\n  }\n  async fetchAndParse() {\n    const doc = await fetchDocument(this.url);\n    if (doc !== null) {\n      const subjects = doc.getSubjectsOfType(schema.BefriendAction);\n      if (subjects.length === 0) {\n        // inbox item does not contain a schema.BefriendAction\n        return;\n      }\n      if (subjects.length > 1) {\n        console.warn(`Notification contains ${subjects.length} schema.BefriendActions, only first one used.`);\n      }\n      const subjectToUse: TripleSubject = subjects[0];\n      this.webId = subjectToUse.getNodeRef(schema.agent) || undefined;\n    }\n  }\n  async fetchProfile() {\n    if (!this.webId) {\n      return;\n    }\n    try {\n      const profileDoc = await fetchDocument(this.webId);\n      const sub = profileDoc.getSubject(this.webId)\n      this.name = sub.getString(vcard.fn)\n      this.picture = sub.getNodeRef(vcard.hasPhoto)\n    } catch (e) {\n      console.error('failed to fetch profile for friend request', this.webId);\n      return null;\n    }\n  }\n}\n\nexport async function getInboxUrl(webId: string) {\n  const profileDoc = await fetchDocument(webId)\n  const profile = profileDoc.getSubject(webId);\n  const inboxUrl = profile.getNodeRef(ldp.inbox);\n  return inboxUrl;\n}\n\nasync function getContainerItems(containerUrl: string): Promise<string[]> {\n  const containerDoc = await fetchDocument(containerUrl);\n  const containerNode = containerDoc.getSubject('');\n  return containerNode.getAllNodeRefs(ldp.contains);\n}\n\nasync function getFriendRequestsFromInbox(webId: string): Promise<FriendRequestData[]> {\n  const inboxUrl = await getInboxUrl(webId);\n  if (!inboxUrl) {\n    return [];\n  }\n  const inboxItems = await getContainerItems(inboxUrl)\n  return Promise.all(inboxItems.map(async (url: string) => {\n    const obj = new FriendRequestData(url);\n    await obj.fetchAndParse();\n    await obj.fetchProfile();\n    return obj;\n  }));\n}\n\nasync function removeRemoteDoc(url: string) {\n  // FIXME: this does not force rdflib.js to\n  // delete its copy of the doc, or of the\n  // container doc.\n  await SolidAuth.fetch(url, {\n    method: 'DELETE'\n  });\n}\n\nasync function removeFriendRequest(obj: FriendRequestData) {\n  await removeRemoteDoc(obj.url)\n}\n\nasync function addFriend(webId: string) {\n  const currentSession = await SolidAuth.currentSession();\n  if (!currentSession || !currentSession.webId) {\n    throw new Error('cannot add friend, you are not logged in!');\n  }\n\n  // Find a Document that lists vcard:Individual's\n  const addressBookDocument = await fetchDocumentForClass(vcard.Individual);\n  if (!addressBookDocument) {\n    throw new Error('cannot add friend, you do not have a Friends addressbook yet!');\n  }\n  const groups = addressBookDocument.getSubjectsOfType(vcard.Group);\n  let found = false;\n  const friendsGroup = groups.find((group: TripleSubject) => {\n    const groupName = group.getString(vcard.fn);\n    return (groupName === 'Friends');\n  });\n  if (!friendsGroup) {\n    throw new Error('you have an addressbook but no Friends group!');\n  }\n  friendsGroup.addNodeRef(vcard.hasMember, webId);\n  await addressBookDocument.save();\n}\n\nasync function accept(obj: FriendRequestData) {\n  if (!obj.webId) {\n    throw new Error('webId unknown from friend request!')\n  }\n  await addFriend(obj.webId);\n  await removeFriendRequest(obj);\n}\n\nasync function reject(obj: FriendRequestData) {\n  await removeFriendRequest(obj);\n}\n\nexport const IncomingList: React.FC = () => {\n  const webId = useWebId();\n  const [friendRequests, setFriendRequests] = React.useState<Array<FriendRequestData>>();\n  const [friendRequestsToAccept, setFriendRequestsToAccept] = React.useState<Array<FriendRequestData>>([]);\n  const [friendRequestsToReject, setFriendRequestsToReject] = React.useState<Array<FriendRequestData>>([]);\n\n  function queueAcceptation(obj: FriendRequestData) {\n    setFriendRequestsToAccept((arr) => arr.concat(obj));\n  }\n\n  React.useEffect(() => {\n    if (friendRequestsToAccept.length) {\n      Promise.all(friendRequestsToAccept.map((item) => accept(item))).then(() => {\n        setFriendRequestsToAccept([]);\n        flushStore();\n        updateList();\n      })\n    }\n  }, [friendRequestsToAccept]);\n\n  function queueRejection(obj: FriendRequestData) {\n    setFriendRequestsToReject((arr) => arr.concat(obj));\n  }\n  React.useEffect(() => {\n    if (friendRequestsToReject.length) {\n      Promise.all(friendRequestsToReject.map((item) => reject(item))).then(() => {\n        setFriendRequestsToReject([]);\n        flushStore();\n        updateList();\n      })\n    }\n  }, [friendRequestsToReject]);\n\n  async function updateList () {\n    if (webId) {\n      await getFriendRequestsFromInbox(webId).then((friendRequestObjs) => {\n        let filtered: FriendRequestData[] = [];\n        friendRequestObjs.forEach(obj => {\n          if ((!!obj.name) && (!!obj.picture) && (!!obj.webId)) {\n            filtered.push(obj);\n          }\n        });\n        setFriendRequests(filtered);\n      });\n    }\n  };\n  function updateListSync() {\n    updateList();\n  }\n  React.useEffect(updateListSync, [webId]);\n\n  return <>\n    {friendRequests ?\n      (friendRequests.length ?\n        friendRequests.map((item, index) => (\n        <li key={item.url}>\n          <p>Friend request from \"{item.name}\"</p>\n          <figure className=\"image is-128x128\">\n            <img src={item.picture || ''}/>\n          </figure>\n          <input type=\"hidden\" name=\"webId\" value=\"{item.webId}\"/>\n          <button type=\"submit\" className='button is-primary' onClick={() => queueAcceptation(item)}>Accept</button>\n          <button type=\"submit\" className='button is-warning' onClick={() => queueRejection(item)}>Reject</button>\n        </li>\n        )) : 'Inbox zero :)'\n      ) : 'Loading friend requests ...'}\n  </>;\n};\n","import { vcard, rdf, acl } from 'rdf-namespaces';\nimport SolidAuth from 'solid-auth-client';\nimport { fetchDocumentForClass } from 'tripledoc-solid-helpers';\nimport { fetchDocument, TripleSubject, createDocument } from 'tripledoc';\n\nexport async function getFriendLists(): Promise<TripleSubject[] | null> {\n  const currentSession = await SolidAuth.currentSession();\n  if (!currentSession || !currentSession.webId) {\n    return null;\n  }\n\n  // Find a Document that lists vcard:Individual's\n  const addressBookDocument = await fetchDocumentForClass(vcard.Individual);\n  if (!addressBookDocument) {\n    return null;\n  }\n\n  const groups = addressBookDocument.getSubjectsOfType(vcard.Group);\n  if (groups.length === 0) {\n    // If no vcard:Group exists yet in the address book, create one named \"Friends\":\n    const firstGroup = addressBookDocument.addSubject();\n    firstGroup.addNodeRef(rdf.type, vcard.Group);\n    firstGroup.addLiteral(vcard.fn, 'Friends')\n    await addressBookDocument.save();\n\n    // Then give everybody in that group permission to read the Document, and the Owner to modify it:\n    const friendsAclRef = addressBookDocument.getAclRef();\n    if (friendsAclRef) {\n      let friendsAclDoc\n      try {\n        await fetchDocument(friendsAclRef);\n      } catch (e) {\n        friendsAclDoc = createDocument(friendsAclRef);\n      }\n      if (friendsAclDoc) {\n        const ownerAcl = friendsAclDoc.addSubject();\n        ownerAcl.addNodeRef(rdf.type, acl.Authorization);\n        ownerAcl.addNodeRef(acl.accessTo, addressBookDocument.asNodeRef());\n        ownerAcl.addNodeRef(acl.mode, acl.Read);\n        ownerAcl.addNodeRef(acl.mode, acl.Append);\n        ownerAcl.addNodeRef(acl.mode, acl.Write);\n        ownerAcl.addNodeRef(acl.mode, acl.Control);\n        ownerAcl.addNodeRef(acl.agent, currentSession.webId);\n\n        const friendsAcl = friendsAclDoc.addSubject();\n        friendsAcl.addNodeRef(rdf.type, acl.Authorization);\n        friendsAcl.addNodeRef(acl.accessTo, addressBookDocument.asNodeRef());\n        friendsAcl.addNodeRef(acl.mode, acl.Read);\n        friendsAcl.addNodeRef(acl.agentGroup, firstGroup.asNodeRef());\n        friendsAclDoc.save();\n      }\n    }\n\n    groups.push(firstGroup);\n  }\n\n  return groups;\n}\n","import React from 'react';\n\ninterface Props {\n  onSelect: (webId: string) => void;\n};\n\nexport const FriendSelector: React.FC<Props> = (props) => {\n  const [webId, setWebId] = React.useState('');\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setWebId(event.target.value);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    props.onSelect(webId);\n    setWebId('');\n  };\n\n  return <>\n    <form onSubmit={onSubmit}>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input className=\"input is-large\" onChange={onChange} value={webId} type=\"url\" name=\"webid\" id=\"webid\"/>\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <button type=\"submit\" className=\"button is-primary\">Add</button>\n        </div>\n      </div>\n    </form>\n  </>;\n};\n","import React from 'react';\nimport { fetchDocument, TripleSubject } from 'tripledoc';\nimport { foaf, vcard } from 'rdf-namespaces';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  webId: string;\n};\n\nexport const Person: React.FC<Props> = (props) => {\n  const [friendSubject, setFriendSubject] = React.useState();\n\n  React.useEffect(() => {\n    fetchDocument(props.webId).then((friendDoc) => {\n      setFriendSubject(friendDoc.getSubject(props.webId));\n    });\n  }, [props.webId]);\n\n  const profile = (friendSubject)\n    ? <Profile subject={friendSubject}/>\n    : <code>{props.webId}</code>;\n\n  return <>\n    {profile}\n  </>;\n};\n\nconst Profile: React.FC<{ subject: TripleSubject }> = (props) => {\n  const profile = props.subject;\n\n  const photoUrl = profile.getNodeRef(vcard.hasPhoto);\n  const photo = (!photoUrl)\n    ? null\n    : <>\n        <figure className=\"media-left\">\n          <p className=\"image is-64x64\">\n            <img src={profile.getNodeRef(vcard.hasPhoto)!} alt=\"Avatar\" className=\"is-rounded\"/>\n          </p>\n        </figure>\n      </>;\n\n  return <>\n    <div className=\"media\">\n      {photo}\n      <div className=\"media-content\">\n        <p className=\"content\">\n          <Link\n            to={`/profile/${encodeURIComponent(profile.asNodeRef())}`}\n            title=\"View this person's friends\"\n          >\n            {profile.getLiteral(foaf.name) || profile.getLiteral(vcard.fn) || profile.asNodeRef()}\n          </Link>\n        </p>\n      </div>\n    </div>\n  </>;\n};\n","import React from 'react';\nimport { TripleSubject } from 'tripledoc';\nimport { vcard } from 'rdf-namespaces';\nimport { FriendSelector } from './FriendSelector';\nimport SolidAuth from 'solid-auth-client';\nimport { getInboxUrl } from './IncomingList'\nimport { Person } from './Person';\nimport { useWebId } from '@solid/react';\n\ninterface Props {\n  friendlist: TripleSubject;\n};\n\nasync function sendFriendRequest(recipient: string) {\n  const currentSession = await SolidAuth.currentSession();\n  if (!currentSession || !currentSession.webId) {\n    return null;\n  }\n  const inboxUrl = await getInboxUrl(recipient);\n  if (!inboxUrl) {\n    throw new Error('friend has no inbox?');\n  }\n  SolidAuth.fetch(inboxUrl, {\n    method: 'POST',\n    body: `@prefix schema: <http://schema.org/> .\n    <> a schema:BefriendAction ;\n       schema:agent <${currentSession.webId}> .`,\n    headers: {\n      'Content-Type': 'text/turtle'\n    }\n  });\n}\n\nexport const Friendlist: React.FC<Props> = (props) => {\n  const [addedFriends, setAddedFriends] = React.useState<string[]>([]);\n  const [storedFriends, setStoredFriends] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n    const friendsToAdd = addedFriends.filter(friend => !storedFriends.includes(friend));\n    if (friendsToAdd.length === 0) {\n      return;\n    }\n    friendsToAdd.forEach((friend) => {\n      props.friendlist.addNodeRef(vcard.hasMember, friend);\n      sendFriendRequest(friend).then(() => {\n        console.log('Friend request sent', friend);\n      });\n    });\n    props.friendlist.getDocument().save().then(() => {\n      setStoredFriends(friends => friends.concat(friendsToAdd));\n    });\n  }, [addedFriends, storedFriends, props.friendlist]);\n\n  const friends = props.friendlist.getAllNodeRefs(vcard.hasMember);\n  const friendElements = React.useMemo(() => {\n    return (friends.length === 0)\n      ? <p>You have not added any friends yet :(</p>\n      : friends.map(getPersonCard)\n      // We want to re-run this when `storedFriends` changes,\n      // because `getAllNodeRefs` will then report new values,\n      // even though it's still the same instance (i.e. it's not immutable):\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [storedFriends, friends]);\n\n  const onAddFriend = (webId: string) => {\n    setAddedFriends(friends => friends.concat(webId));\n  };\n\n  return <>\n    <h2 className=\"title\">\n      {props.friendlist.getLiteral(vcard.fn)}\n    </h2>\n    <section className=\"section\">\n      {friendElements}\n    </section>\n    <section className=\"section\">\n      <FriendSelector onSelect={onAddFriend}/>\n    </section>\n  </>;\n};\n\nfunction getPersonCard(webId: string): React.ReactElement {\n  return <>\n    <div key={webId} className=\"card\">\n      <div className=\"section\">\n        <Person webId={webId}/>\n      </div>\n    </div>\n  </>;\n}\n","import React from 'react';\nimport { TripleSubject } from 'tripledoc';\nimport { getFriendLists } from '../services/getFriendList';\nimport { useWebId } from '@solid/react';\nimport { Friendlist } from './Friendlist';\n\nexport const FriendLists: React.FC = () => {\n  const webId = useWebId();\n  const [friendLists, setFriendlists] = React.useState<TripleSubject[]>();\n\n  React.useEffect(() => {\n    // Only fetch friend lists when someone is logged in\n    if (!webId) {\n      return;\n    }\n\n    getFriendLists().then((friendLists) => {\n      if (!friendLists) {\n        return;\n      }\n      setFriendlists(friendLists);\n    });\n  }, [webId]);\n\n  if (!friendLists) {\n    return <>\n      Loading friends list&hellip;\n    </>;\n  }\n\n  const friendListElements = friendLists.map(\n    (friendlist, i) => <Friendlist key={'friendlist' + i} friendlist={friendlist}/>);\n\n  return <>\n    <section className=\"section\">\n      {friendListElements}\n    </section>\n  </>;\n};\n","import { fetchDocument, NodeRef } from 'tripledoc';\nimport { solid, vcard } from 'rdf-namespaces';\n\ninterface AddressBook {\n  name: string | null;\n  contacts: NodeRef[];\n};\n\nexport async function getFriendListsForWebId(webId: string): Promise<AddressBook[] | null> {\n  const profileDoc = await fetchDocument(webId);\n  const profile = profileDoc.getSubject(webId);\n  const publicTypeIndexRef = profile.getNodeRef(solid.publicTypeIndex);\n  if (!publicTypeIndexRef) {\n    return null;\n  }\n\n  const publicTypeIndex = await fetchDocument(publicTypeIndexRef);\n  const individualIndex = publicTypeIndex.findSubject(solid.forClass, vcard.Individual);\n  if (!individualIndex) {\n    return null;\n  }\n\n  const friendListsDocRef = individualIndex.getNodeRef(solid.instance);\n  if (!friendListsDocRef) {\n    return null;\n  }\n\n  const friendListsDoc = await fetchDocument(friendListsDocRef);\n  const friendLists = friendListsDoc.getSubjectsOfType(vcard.Group);\n\n  const addressBooks = friendLists.map(list => {\n    const addressBook: AddressBook = {\n      name: list.getString(vcard.fn),\n      contacts: list.getAllNodeRefs(vcard.hasMember),\n    };\n    return addressBook;\n  });\n  return addressBooks;\n}\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { TripleDocument, NodeRef } from 'tripledoc';\nimport { getFriendListsForWebId } from '../services/getFriendListForWebId';\nimport { Person } from './Person';\n\ninterface PathParams {\n  webId: string;\n};\n\nexport const Profile: React.FC = (props) => {\n  const params = useParams<PathParams>();\n  const webId = decodeURIComponent(params.webId);\n\n  const [metaFriends, setMetaFriends] = React.useState<NodeRef[] | null>();\n\n  React.useEffect(() => {\n    getFriendListsForWebId(webId).then(friendLists => {\n      if (friendLists === null) {\n        setMetaFriends(null);\n        return;\n      }\n\n      const theirFriends = friendLists.reduce((friends, list) => {\n        list.contacts.forEach(friendRef => friends.add(friendRef));\n        return friends;\n      }, new Set<NodeRef>());\n\n      setMetaFriends(Array.from(theirFriends.values()));\n    });\n  }, [webId]);\n\n  if (metaFriends === null) {\n    return <>\n      <section className=\"section\">\n        <p className=\"content\">\n          This person does not have any friends that are visible to you.\n        </p>\n      </section>\n    </>;\n  }\n\n  if (metaFriends === undefined) {\n    return <>\n      <section className=\"section\">\n        <p className=\"content\">\n          Loading&hellip;\n        </p>\n      </section>\n    </>;\n  }\n\n  const profiles = metaFriends.map((friendRef) => {\n    return <>\n      <section className=\"section\">\n        <div key={friendRef} className=\"card\">\n          <div className=\"section\">\n            <Person webId={friendRef}/>\n          </div>\n        </div>\n      </section>\n    </>;\n  });\n\n  return <>\n    {profiles}\n  </>;\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { IncomingList } from './components/IncomingList';\nimport { FriendLists } from './components/FriendLists';\nimport { LoggedOut, LoginButton, LoggedIn } from '@solid/react';\nimport { Profile } from './components/Profile';\n\nconst App: React.FC = () => {\n  return <>\n    <Router>\n      <LoggedOut>\n        <section className=\"section\">\n          <p className=\"content\">This app requires you to log in. It requires <b>Control</b> access.</p>\n          <LoginButton popup=\"popup.html\" className=\"button is-large is-primary\">Log in to start using</LoginButton>\n        </section>\n      </LoggedOut>\n      <LoggedIn>\n        <Switch>\n          <Route path=\"/profile/:webId\">\n            <Profile/>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"panel\">\n              <IncomingList/>\n            </div>\n            <div className=\"panel\">\n              <FriendLists/>\n            </div>\n          </Route>\n        </Switch>\n      </LoggedIn>\n    </Router>\n  </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}